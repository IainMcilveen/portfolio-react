{"version":3,"sources":["img/background.jpg","img/profile.jpg","components/Navbar.js","components/Welcome.js","components/About.js","components/Experiences.js","components/Projects.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","useState","hoverIndex","setHoverIndex","navHidden","setNavHidden","navTran","setNavTran","useScrollPosition","currPos","y","options","text","loc","links","i","push","className","key","onMouseEnter","onMouseLeave","style","href","length","onMouseDown","Welcome","alt","src","bgImg","About","id","profile","Experience","props","flip","index","title","subtitle","time","link","pic","Experiences","experiences","forEach","ele","Project","url","img","desc","date","Projects","projects","Contact","resumeIcon","icon","faScroll","gitIcon","faGithub","linkedIcon","faLinkedin","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b2ed151.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.2ac9d302.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile.87a9dd06.jpg\";","import React , { useState } from \"react\"\r\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position'\r\nimport \"../css/Navbar.scss\"\r\n\r\nfunction Navbar(){\r\n\r\n    const [hoverIndex,setHoverIndex] = useState(-1);\r\n    const [navHidden,setNavHidden] = useState(false);\r\n    const [navTran,setNavTran] = useState(false);\r\n\r\n    useScrollPosition(({ currPos }) => {\r\n        if(currPos.y < -140){\r\n            setNavTran(true);\r\n        }else{\r\n            setNavTran(false);\r\n        }\r\n    });\r\n\r\n    let options = [\r\n        {\r\n            text: \"About Me\",\r\n            loc: \"#About\"\r\n        },\r\n        {\r\n            text: \"Experiences\",\r\n            loc: \"#Experiences\"\r\n        },\r\n        {\r\n            text: \"Projects\",\r\n            loc: \"#Projects\"\r\n        },\r\n        {\r\n            text:\"Contact\",\r\n            loc:\"#Contact\"\r\n        }]; \r\n    let links = [];\r\n\r\n\r\n    for(let i = 0; i < options.length; i++){\r\n        links.push(\r\n            <li className=\"navbar-element\" key={i}\r\n                onMouseEnter={ () => setHoverIndex(i)}\r\n                onMouseLeave={ () => setHoverIndex(-1)}\r\n                style={{\"backgroundColor\": (hoverIndex === i ? '#323742' : \"\") }}\r\n            >\r\n                <a className=\"navbar-link\" href={options[i].loc}>{options[i].text}</a>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    \r\n    return(\r\n        <nav className={(navHidden ? \"navbar-hidden \" : \"\") +  (navTran ? \"navbar-transparent\" : \"\")}>\r\n            <ul className=\"navbar-list\">\r\n                <figure onMouseDown={ () => setNavHidden(!navHidden)}>\r\n                    <i className={navHidden ? \"hidden\" : \"visible\"}></i>\r\n                </figure>\r\n                {links}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\"\r\nimport '../css/Welcome.scss';\r\nimport bgImg from \"../img/background.jpg\"\r\n\r\n\r\n//import ReactDOM from \"react-dom\"\r\n\r\nfunction Welcome(){\r\n    return(\r\n        <div className=\"App-Welcome\">\r\n            <img className=\"Welcome-Image\" alt=\"background\" src={bgImg} />\r\n            <div className=\"Welcome-Tran\"></div>\r\n            <div className=\"Welcome\">\r\n                <h1>Welcome</h1>\r\n                <h2>Iain Mcilveen's Portfolio Website</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Welcome;","import React from \"react\"\r\nimport '../css/About.scss';\r\nimport profile from '../img/profile.jpg';\r\n\r\nfunction About(){\r\n    return(\r\n        <div className=\"App-main\">\r\n            <scroll-container>\r\n                <scroll-page id=\"About\"></scroll-page>\r\n            </scroll-container>\r\n            <div className=\"profile\">\r\n                <img src={profile} alt=\"nope\" />\r\n            </div>\r\n            <div className=\"intro\">\r\n                <div className=\"introText\">\r\n                    <h2>About Me</h2>\r\n                    <p>Hi, I'm Iain. I am an aspiring software developer and full time student in third year at Carleton University studying computer science. I am passionate about all things computer science and enjoy learning new things.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from \"react\"\r\nimport '../css/Experiences.scss';\r\n\r\nfunction Experience(props){\r\n    return(\r\n        <div className={\"Experience-Box\" + (props.flip ? \" flipped\" : \"\")} key={props.index}>\r\n            <div className=\"Experience-Info\">\r\n                <div className=\"Experience-Title\">\r\n                    <h2>{props.title}</h2>\r\n                    <h4 id=\"subtitle\">{props.subtitle}</h4>\r\n                </div>\r\n                <h4>{props.time}</h4>\r\n                <p>{props.text}</p>\r\n            </div>\r\n            <div className=\"Experience-Image\">\r\n                <a href={props.link}><img src={props.pic} alt=\"Experience\"></img></a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction Experiences(){\r\n    \r\n    let projectData = [\r\n        {\r\n            title: \"Application Developer\",\r\n            subtitle: \"Statistics Canada\",\r\n            time: \"June 2020 - Present\",\r\n            text: \"As a Application Developer I work on created and improving internal tools used by many different clients within Statistics Canada. This meant I had to be able to work with clients to create the programs to suit their needs.\",\r\n            pic: \"https://cdn.discordapp.com/attachments/665849154186248202/747518688009257122/stat-can-new.png\",\r\n            link: \"https://www.statcan.gc.ca/eng/start\"\r\n        },\r\n        {\r\n            title: \"Computer Science Teaching Assistant\",\r\n            subtitle: \"Carleton University: School of Computer Science\",\r\n            time: \"September 2019 - December 2019\",\r\n            text: \"As a teaching assistant I got to help students gain a better understanding of the fundemental concepts of programming. I held office hours, lead tutorials and work with a team of other teaching assistants to help students and complete marking of assignments in a timely manner.\",\r\n            pic: \"https://cdn.discordapp.com/attachments/665849154186248202/747513262173585509/scs.png\",\r\n            link: \"https://admissions.carleton.ca/programs/computer-science/\"\r\n        },\r\n        {\r\n            title: \"B.S.C. Computer Science (Honours) \",\r\n            subtitle: \"Carleton University\",\r\n            time: \"September 2018 - Present\",\r\n            text: \"Currently studying Computer Science at Carleton University where I am learning about a wide range of computer science related topics such as: Systems Programming, Software engineering, Wev developement as well as many others.\",\r\n            pic: \"https://cdn.discordapp.com/attachments/665849154186248202/747507324804923543/carleton-university-vector-logo.png\",\r\n            link: \"https://carleton.ca/\"\r\n        }\r\n    ];\r\n\r\n    let experiences = [];\r\n    let flip = false;\r\n    projectData.forEach((ele,index) => {\r\n        experiences.push(<Experience title={ele.title} subtitle={ele.subtitle} time={ele.time} text={ele.text} pic={ele.pic} link={ele.link} flip={flip} key={index} />);\r\n        flip = !flip;\r\n    });\r\n    \r\n    \r\n    return(\r\n        <div className=\"App-Experiences\">\r\n            <scroll-container>\r\n                <scroll-page id=\"Experiences\"></scroll-page>\r\n            </scroll-container>\r\n            <div className=\"Experiences-Title\">\r\n                <h1>My Experiences</h1>\r\n            </div>\r\n            {experiences}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Experiences;","import React from \"react\"\r\nimport '../css/Projects.scss';\r\n\r\nfunction Project(props){\r\n    return(\r\n        <div className=\"Project-Box\">\r\n            <div className=\"Project-Image\">\r\n                <a href={props.url}> <img src={props.img} alt=\"project\" /></a>\r\n            </div>\r\n            <div className=\"Project-Title\">\r\n                <a href={props.url}><h4>{props.title}</h4></a>\r\n                <h6>{props.desc}</h6>\r\n                <p><b>{props.date}</b></p>\r\n            </div>\r\n            <div className=\"Project-Info\">\r\n                <p>{props.text}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Projects(){\r\n\r\n    let projectData = [{\r\n        url: \"https://github.com/IainMcilveen/portfolio-react\",\r\n        img: \"https://cdn.discordapp.com/attachments/665849154186248202/754843218356731954/unknown.png\",\r\n        title: \"React Portfolio\",\r\n        desc: \"Web Application\",\r\n        date: \"September 2020\",\r\n        text: \"This is my portfolio website written using React and Sass styling used to demonstrate my current projects, skills and experience. I made use of React Hooks to save states such as if the person viewing the side has the nav bar hidden or not.\"\r\n    },\r\n    {\r\n        url: \"https://github.com/IainMcilveen/pathfinding-visualizer\",\r\n        img: \"https://cdn.discordapp.com/attachments/665849154186248202/754846093556187216/pathfinding-vis-gif.gif\",\r\n        title: \"Pathfinding Visulizor\",\r\n        desc: \"Algorithms\",\r\n        date: \"July 2020\",\r\n        text: \"I wrote this application as a way to visualize the A star pathfinding algorithm, allowing the user to create different obstacles and set a start and end point for the algorithm to use. It was written in python using pygame to display the graphics.\"\r\n    },\r\n    {\r\n        url: \"https://github.com/IainMcilveen/Whos-That-Pokemon\",\r\n        img: \"https://cdn.discordapp.com/attachments/665849154186248202/754850059824267344/unknown.png\",\r\n        title: \"Who's That Pokemon\",\r\n        desc: \"Mobile Web Application\",\r\n        date: \"January 2020\",\r\n        text: \"This is a program written for the CUHacking 2020 hackathon, this is a web application written in React which is designed to work well on mobile devices. I made use of the Hooks API to save the quiz state and determine whether the user answered correctly or incorrectly.\"\r\n    },\r\n    {\r\n        url: \"https://github.com/IainMcilveen/comp3005pg\",\r\n        img: \"https://cdn.discordapp.com/attachments/665849154186248202/754853854108975244/unknown.png\",\r\n        title: \"COMP 3005 Database Project\",\r\n        desc: \"Web Application\",\r\n        date: \"April 2020\",\r\n        text: \"This program is my final project for COMP 3005, it is a web application designed to be the platform for a online book store. I made use of postgreSQL to store book and order information, and nodeJS for the backend. For the frontend, I made use of Pug for the templates which pull information from the database.\"\r\n    },\r\n    {\r\n        url: \"https://github.com/IainMcilveen/GridWorld\",\r\n        img: \"https://cdn.discordapp.com/attachments/665849154186248202/758103143606386688/gridworld.gif\",\r\n        title: \"Grid World\",\r\n        desc: \"Game\",\r\n        date: \"October 2019\",\r\n        text: \"This is a in-progess game being written from scratch in Java using AWT, currently the player can walk around and explore the world and can naviagate to different procedurally generated screens.\"\r\n    }\r\n    ]\r\n\r\n    let projects = [];\r\n    projectData.forEach((ele,index) => {\r\n        projects.push(<Project url={ele.url} img={ele.img} title={ele.title} desc={ele.desc} date={ele.date} text={ele.text} key={index} />);\r\n    });\r\n\r\n    return(\r\n        <div className=\"App-Projects\">\r\n            <scroll-container>\r\n                <scroll-page id=\"Projects\"></scroll-page>\r\n            </scroll-container>\r\n            <div className=\"Projects-Title\">\r\n                <h1>My Projects</h1>\r\n            </div>\r\n            <div className=\"Projects-All\">\r\n                {projects}\r\n            </div>\r\n        </div>    \r\n    );\r\n}\r\n\r\nexport default Projects;","import React from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faScroll} from '@fortawesome/free-solid-svg-icons';\r\nimport { faGithub, faLinkedin} from '@fortawesome/free-brands-svg-icons';\r\nimport '../css/Contact.scss';\r\n\r\nfunction Contact(){\r\n    const resumeIcon = <FontAwesomeIcon icon={faScroll} />\r\n    const gitIcon = <FontAwesomeIcon icon={faGithub} />\r\n    const linkedIcon = <FontAwesomeIcon icon={faLinkedin} />\r\n    return(\r\n        <div className=\"App-Contact\">\r\n            <scroll-container>\r\n                <scroll-page id=\"Contact\"></scroll-page>\r\n            </scroll-container>\r\n            <div className=\"Contact-Title\">\r\n                <h1>Find Me</h1>\r\n            </div>\r\n            <div className=\"Contact-Links\">\r\n                <a href=\"https://github.com/IainMcilveen\">{gitIcon}</a>\r\n                <a href=\"https://www.linkedin.com/in/iain-mcilveen-64b14a185/\">{linkedIcon}</a>\r\n                <a href=\"https://drive.google.com/file/d/1DZksY3mE82BobtuwYSdb1J94xGfdup7j/view?usp=sharing\">{resumeIcon}</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport './css/App.scss';\r\nimport Navbar from \"./components/Navbar.js\"\r\nimport Welcome from \"./components/Welcome.js\"\r\nimport About from \"./components/About.js\"\r\nimport Experiences from \"./components/Experiences.js\"\r\nimport Projects from \"./components/Projects.js\"\r\nimport Contact from \"./components/Contact.js\"\r\n\r\nfunction App(){\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <Welcome />\r\n      <About />\r\n      <Experiences />\r\n      <Projects />\r\n      <Contact />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}